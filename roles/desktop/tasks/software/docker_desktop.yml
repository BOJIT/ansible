- name: Install Docker (Ubuntu)
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  block:
    - name: Set username as variable (Ubuntu)
      ansible.builtin.set_fact:
        username: "{{ ansible_user_id }}"

    - name: Install Build Requirements (Ubuntu)
      become: true
      ansible.builtin.package:
        state: latest
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release

    - name: Gather package facts (Ubuntu)
      ansible.builtin.package_facts:
        manager: apt

    - name: Add Docker GPG key (Ubuntu)
      become: true
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker APT repository (Ubuntu)
      become: true
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable

    - name: Fetch latest package (Ubuntu)
      ansible.builtin.get_url:
        url: https://desktop.docker.com/linux/main/amd64/docker-desktop-4.15.0-amd64.deb?utm_source=docker&utm_medium=webreferral&utm_campaign=docs-driven-download-linux-amd64
        dest: "{{ userpath }}/{{ ansible_user_id }}/dockerDesktop.deb"
      when: '"docker-desktop" not in ansible_facts.packages'

    - name: Install Docker Desktop (Ubuntu)
      become: true
      ansible.builtin.apt:
        deb: "{{ userpath }}/{{ username }}/dockerDesktop.deb"
        update_cache: yes
      when: '"docker-desktop" not in ansible_facts.packages'

    - name: Remove installer file (Ubuntu)
      ansible.builtin.file:
        path: "{{ userpath }}/{{ username }}/dockerDesktop.deb"
        state: absent
      when: '"docker-desktop" not in ansible_facts.packages'

    - name: Install docker-compose for user (Ubuntu)
      ansible.builtin.pip:
        name: docker-compose
        extra_args: --user

- name: Install Docker Desktop (MacOS)
  community.general.homebrew_cask:
    name: docker
    state: present
  when: ansible_distribution == 'MacOSX'
